page_solution = function() { pages.list["page_solution"] = this }
new page_solution();

let show_first = false;
let show_second = false;
let show_third = false;


page_solution.prototype.on_show = Step_All ;



function Step_All (solution,user_case) {

	$("#solutions_name").html(solution.short_name);
	$("#solutions_info").html(solution.info);

	let container = $("#steps")
	container.empty();
	solution_widgets = []; // not good - управление не из одной точки

	
	for( let [step_id,step] in Iterator(solution.steps) ) {
		{		
		let el = document.createElement("div");
		$(el)
			.addClass("step")
			.addClass("step_"+step_id)
			.attr("id","step_"+step_id)
			.append(render_step(step,step_id,user_case));
			if(step_id>0){$(el).hide();}
		container.append(el);
		}
	}

}



function render_step(step,step_id,user_case) {
	let step_els = [];
	for( let [widget_id,widget] in Iterator(step) ) {
		if( widget.widget_type ) {
			let w = new widget_types[widget.widget_type](widget);
			w.widget_id = widget_id
			w.step_id = step_id
			let user_value = user_case[step_id+"_"+widget_id];
			if( user_value ) {
				w.set_value(user_value);
			}
			solution_widgets.push(w);
			step_els.push(w.DOM);
		}
	}
	return step_els;
}




var widget_types = {}
var solution_widgets = []

//
//
//

t_widget_short_label = function(widget_desc) {
	this.DOM = document.createElement("div");
	$(this.DOM)
		.html(widget_desc.text)
		.addClass("short_label");
}
widget_types["short_label"] = t_widget_short_label;


// копипаста
t_widget_text = function(widget_desc) {
	this.DOM = document.createElement("div");
	$(this.DOM)
		.html(widget_desc.text)
		.addClass("text");
}
widget_types["text"] = t_widget_text;

//
t_widget_input_free_text = function(widget_desc) {
	this.variable = widget_desc.variable; // TODO: prototype ?
	this.DOM = document.createElement("div");
	$(this.DOM)
		.html("<input type='text' id='"+this.variable+"'> "+this.variable)
		.addClass("input_free_text");
}
t_widget_input_free_text.prototype.get_value = function() {
	return this.DOM.children[0].value; // ненадежно
}
t_widget_input_free_text.prototype.set_value = function(value) {
	this.DOM.children[0].value = value;
}
widget_types["input_free_text"] = t_widget_input_free_text;

//
t_widget_print = function(widget_desc) {
	this.template = widget_desc.template; // TODO: prototype ?
	this.DOM = document.createElement("div");
	$(this.DOM)
		.html("<input type='button' value='"+strings.generate_doc+"'>")
		.addClass("input_free_text")
		.click({template:this.template,case_id:"??? а оно нам надо?"},on_generate_doc);
}
widget_types["print"] = t_widget_print;

//
t_widget_success = function(widget_desc) {
	this.DOM = document.createElement("div");
	$(this.DOM)
		.html("<input type='button' value='"+strings.success+"'>") // будет глючить на кавычках и апострофах
		.addClass("input_free_text")
		.click(close_solution);
}
widget_types["success"] = t_widget_success;

//
t_widget_failure = function(widget_desc) {
	this.DOM = document.createElement("div");
	let el = document.createElement("input");
	$(el).attr("type","button").attr("value",strings.failure);
	$(this.DOM)
		.append(el)
		.addClass("input_free_text")
		.click(close_solution);
}
widget_types["failure"] = t_widget_failure;

function close_solution() {
	for( let [,widget] in Iterator(solution_widgets) ) {
		if( widget.variable ) {
			let user_value = widget.get_value();
			if( user_value ) {
				user_case[widget.step_id+"_"+widget.widget_id] = user_value;
			}
		}
	}
	localStorage.setItem(user_case.id,JSON.stringify( user_case ));
	show_page("page_search")
}



//
t_widget_first = function(widget_desc) {
	this.DOM = document.createElement("input");
	$(this.DOM)
		.attr("type", "button")
		.attr("value", strings.first)
		.click  (
			 function() 
				{	show_first = !show_first;
					if(show_first) $(document.getElementById("step_1")).show();
					if(!show_first) $(document.getElementById("step_1")).hide();
				}
			);
					
}
widget_types["first"] = t_widget_first;



//
t_widget_second = function(widget_desc) {
	this.DOM = document.createElement("input");
	$(this.DOM)
		.attr("type", "button")
		.attr("value", strings.second)
		.addClass("input_free_text")
		.click  (
			 function() 
				{	show_second = !show_second;
					if(show_second) $(document.getElementById("step_2")).show();
					if(!show_second) $(document.getElementById("step_2")).hide();
				}
			);
}
widget_types["second"] = t_widget_second;



//
t_widget_third = function(widget_desc) {
	this.DOM = document.createElement("input");
	$(this.DOM)
		.attr("type", "button")
		.attr("value", strings.third)
		.addClass("input_free_text")
		.click  (
			 function() 
				{	show_third = !show_third;
					if(show_third) $(document.getElementById("step_3")).show();
					if(!show_third) $(document.getElementById("step_3")).hide();
				}
			);
}
widget_types["third"] = t_widget_third;
//

//

t_widget_read = function(widget_desc) {
	this.template = widget_desc.template; // TODO: prototype ?
	this.DOM = document.createElement("div");
	$(this.DOM)
		.html("<input type='button' value='"+strings.read+"'>")
		.addClass("input_free_text")
		.click({template:this.template,case_id:"??? а оно нам надо?"},on_generate_doc);
}
widget_types["read"] = t_widget_read;
//





t_widget_hidden_text = function(widget_desc) {
	this.DOM = document.createElement("div");
	$(this.DOM)
		.html(information.overview)
		.addClass(widget_desc.text_name)
		.attr("id",widget_desc.text_name)
		.hide();
		
	
}
widget_types["hidden_text"] = t_widget_hidden_text;



t_widget_hide_button = function(widget_desc) {
		
	this.DOM = document.createElement("input");
	$(this.DOM)
		.attr("type", "button")
		.addClass("hide")
		.attr("value", strings.show)
		.attr("id","hide_"+widget_desc.hidden_object)
		.click  (
			 function() 
				{ 
				 var s = $(document.getElementById("hide_"+widget_desc.hidden_object)).attr("value");
				 switch(s)
					{
					case "